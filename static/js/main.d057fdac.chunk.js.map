{"version":3,"sources":["context.js","components/Contact.js","components/Contacts.js","components/Header.js","components/TextInputGroup.js","components/AddContact.js","components/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","c","id","payload","map","contact","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showDetails","onShowDetails","onDeleteClick","contactId","a","async","delete","name","email","phone","className","style","backgroundColor","border","icon","faCoffee","faCamera","onClick","cursor","faTimes","bind","float","color","to","faPencilAlt","marginRight","defaultProps","Contacts","searchname","match","params","Fragment","key","Header","branding","href","faHome","faPlus","faQuestion","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","Text","PropTypes","string","isRequired","func","defaultProp","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","onChanged","target","EditContact","updContact","put","About","headerTag","location","pathname","App","exact","path","component","NotFound","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d057fdac.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from \"axios\"\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(c => c.id !== action.payload)\r\n            };\r\n        case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case \"UPDATE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(\r\n                    contact => contact.id === action.payload.id ? (contact = action.payload) : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer\r\n","import React, { Component } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faTimes, faCamera, faPencilAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { Consumer } from '../context'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showDetails: true\r\n    }\r\n    static defaultProps = {\r\n        name: 'Unkown User'\r\n    }\r\n\r\n    static propTypes = {\r\n        name: propTypes.string.isRequired,\r\n        email: propTypes.string,\r\n        phone: propTypes.string\r\n    }\r\n\r\n    onShowDetails = () => this.setState({ showDetails: !this.state.showDetails });\r\n\r\n    onDeleteClick = async (contactId, dispatch) => {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${contactId}`);\r\n        dispatch({ type: 'DELETE_CONTACT', payload: contactId });\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props;\r\n        const { showDetails } = this.state\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                    <div className=\"card card-body mb-3\" style={{ backgroundColor: 'lightblue', border: 'solid gray' }}>\r\n                        <h4>\r\n                            {name}\r\n                            <FontAwesomeIcon icon={showDetails ? faCoffee : faCamera} onClick={this.onShowDetails} style={{ cursor: 'pointer' }} className=\"ml-2\" />\r\n                            <FontAwesomeIcon icon={faTimes} onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\r\n                                style={{ cursor: 'pointer', float: 'right', color: 'red' }} />\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }} />\r\n                            </Link>\r\n                        </h4>\r\n                        {\r\n                            showDetails ?\r\n                                (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>\r\n                                ) : null\r\n                        }\r\n\r\n                    </div>\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../context'\r\n\r\nexport default class Contacts extends Component {\r\n    render() {\r\n        const { searchname } = this.props.match.params;\r\n        return (\r\n            <Consumer>\r\n                {value => \r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                        {value.contacts.map(contact => {\r\n                            const { id, name, email, phone } = contact;\r\n                            if (searchname) {\r\n                                if (contact.name !== searchname) return null;\r\n                            }\r\n                            return (\r\n                                <Contact key={id} id={id} name={name} email={email} phone={phone} />\r\n                            )\r\n                        })}\r\n                    </React.Fragment>\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <FontAwesomeIcon icon={faHome} />\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                                Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <FontAwesomeIcon icon={faQuestion} />\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: propTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nfunction TextInputGroup({ label, name, value, placeholder, type, onChange, error }) {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"name\">{label}</label>\r\n            <input type={type} name={name}\r\n                className={classnames(\"form-control form-control-lg\", { \"is-invalid\": error })}\r\n                placeholder={placeholder} value={value}\r\n                onChange={onChange} />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>)\r\n}\r\n\r\nText.PropTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProp = {\r\n    type: \"text\"\r\n}\r\n\r\nexport default TextInputGroup","import React, { Component } from 'react'\r\nimport { Consumer } from '../context'\r\nimport TextInputGroup from './TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } })\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users/',newContact);\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        this.setState({ name: '', email: '', phone: '', errors: {} })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChanged = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                    <div className=\"card mb-3\" style={{ backgroundColor: 'lavender', border: 'solid gray' }}>\r\n                        <div className=\"card-header\">Add Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                                <TextInputGroup label=\"Name\" name=\"name\" value={name} placeholder=\"Enter name ...\" onChange={this.onChanged} error={errors.name} />\r\n                                <TextInputGroup label=\"Email\" name=\"email\" value={email} placeholder=\"Enter email ...\" type=\"email\" onChange={this.onChanged} error={errors.email} />\r\n                                <TextInputGroup label=\"Phone\" name=\"phone\" value={phone} placeholder=\"Enter phone ...\" onChange={this.onChanged} error={errors.phone} />\r\n                                <input type=\"submit\" value=\"Add Context\" className=\"btn btn-block btn-light\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </Consumer>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact","import React, { Component } from 'react'\r\nimport { Consumer } from '../context'\r\nimport TextInputGroup from './TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact = res.data;\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } })\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } })\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } })\r\n            return;\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        this.setState({ name: '', email: '', phone: '', errors: {} })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChanged = (e) => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value =>\r\n                    <div className=\"card mb-3\" style={{ backgroundColor: 'lavender', border: 'solid gray' }}>\r\n                        <div className=\"card-header\">Edit Contact</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                                <TextInputGroup label=\"Name\" name=\"name\" value={name} placeholder=\"Enter name ...\" onChange={this.onChanged} error={errors.name} />\r\n                                <TextInputGroup label=\"Email\" name=\"email\" value={email} placeholder=\"Enter email ...\" type=\"email\" onChange={this.onChanged} error={errors.email} />\r\n                                <TextInputGroup label=\"Phone\" name=\"phone\" value={phone} placeholder=\"Enter phone ...\" onChange={this.onChanged} error={errors.phone} />\r\n                                <input type=\"submit\" value=\"Update Context\" className=\"btn btn-block btn-light\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n                }\r\n            </Consumer>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact","import React from 'react'\r\n\r\nfunction About() {\r\n    let copyright = \"Copyright(C) Farzan Hajian\";\r\n    let showCoptyright = true;\r\n    let showBold = false;\r\n    let headerTag\r\n\r\n    if (showBold) {\r\n        headerTag = <h1 className=\"text-secondary\">Hello {copyright}</h1>;\r\n    } else {\r\n        headerTag = <h6 className=\"text-secondary\">Hello {copyright}</h6>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple application for managing contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n            {showCoptyright ? headerTag : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"dislay-4\">\r\n                <span className=\"text-danger\">404 </span>\r\n                Page Not Found\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page ({props.history.location.pathname}) does not exist</p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from './components/Contacts';\nimport { Provider } from './context'\nimport Header from './components/Header'\nimport AddContact from './components/AddContact';\nimport EditContact from './components/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/contact/:searchname\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}